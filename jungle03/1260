from collections import deque

N, M, V = map(int, input().split())
graph = [[] for _ in  range(N + 1)]

for _ in range(M):
    u, v = map(int, input().split())
    graph[u].append(v)
    graph[v].append(u)   
    
for u in range(1, N + 1):
    graph[u].sort()

visited = [False] * (N + 1)

def dfs(u):
    visited[u] = True
    print(u, end=' ')

    for v in graph[u]:
        if not visited[v]:
            dfs(v)

dfs(V)
print()

visited = [False] * (N + 1)

def bfs(start):
    queue = deque([start])
    visited[start] = True

    while queue:
        u = queue.popleft()
        print(u, end=' ')

        for v in graph[u]:
            if not visited[v]:
                visited[v] = True
                queue.append(v)

bfs(V)
