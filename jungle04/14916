n = int(input())
count = 0
five = 0
one = 0

if n % 5 == 0 :
    count = n // 5

elif n >= 10:
    if n % 2 == 0:
        five = (n // 10) * 2
        one = (n - (5 * five)) // 2
        count = five + one

    else:
        if n % 10 < 5:
            five = (n // 5) - 1
            one = (n - (five * 5)) // 2
            count = five + one
    
        else:
            five = n // 5
            one = (n - (five * 5)) // 2
            count = five + one

else:
    if n == 1 or n == 3:
        count = -1

    elif n % 2 == 0:
        count = n // 2

    else:
        five = n // 5
        one = (n - 5) // 2
        count = five + one

print(count)


# <<<draft>>>

# [Case 0] n % 5 == 0
# -> 무조건 5원만 사용

# elif

# [Case 1] n >= 10
# (1) 짝수라면?
#     10의 자리에서 5원 끊고, 1의 자리는 전부 2원.
# (2) 홀수라면? 
#     5의 배수가 아닌 홀수의 1의자리: 1(5+6), 3(5+8), 7(5+2), 9(5+4)

# 난관: 1의 자리가 1,3 일 때와 7,9 일 때가 달랐다 !!!!!!! 으으ㅓ어ㅓㄱㅇ

# n이 10 이상일 때도 거슬러 줄 수 없는 경우가 있는가? 없다.
# 거슬러 줄 수 없는 경우는 n이 1, 3일 때만 존재한다.

# elif 
# [Case 2] n < 10
# (1) 거슬러 줄 수 있는 경우: 2, 4, 6, 7, 8, 9 각각 어떻게 처리?
# (2) 거슬러줄 수 없는 경우: 1, 3,

# Q. 각각 독립적으로 출력 처리를 할 것인가?
# -1을 출력은 마지막에 else로 처리할 것인가?
# why? 마지막에 else로 빠지는 것보다 조건문에서 먼저 걸리는 게 시간이 덜 소요되는가?

# 이게 그리디가 맞나?: 아니면 다르게 풀 수 있나? 그냥 하자...
# if 문을 이따구로 많이 돌려도 가능할 것인가?: 일단 해보자 시간제한 2초란다..
