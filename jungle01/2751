import sys

def heapify(arr, n, i):
    largest = i  # 부모 노드
    left = 2 * i + 1  # 왼쪽 자식 노드
    right = 2 * i + 2  # 오른쪽 자식 노드

    # 왼쪽 자식이 부모보다 크면 largest 갱신
    if left < n and arr[left] > arr[largest]:
        largest = left

    # 오른쪽 자식이 largest보다 크면 largest 갱신
    if right < n and arr[right] > arr[largest]:
        largest = right

    # largest가 변경되었다면, 위치를 교환하고 다시 heapify 수행
    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]  # Swap
        heapify(arr, n, largest)

def heap_sort(arr):
    n = len(arr)

    # 1. 배열을 최대 힙 구조로 변환
    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)

    # 2. 하나씩 최대값을 빼면서 정렬 수행
    for i in range(n - 1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]  # 최대값(루트)과 마지막 값 교환
        heapify(arr, i, 0)  # 루트를 다시 heapify

N = int(sys.stdin.readline().strip())
A = list(map(int, sys.stdin.read().split()))

heap_sort(A)
sys.stdout.write("\n".join(map(str, A)) + "\n")
